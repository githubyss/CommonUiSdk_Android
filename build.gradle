plugins {
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def isShellApp = project.getName() == rootProject.shellApp
def isLaunchApp = project.getName() == rootProject.launchApp

if (isShellApp) {
    println "isShellApp: ${isShellApp}"
}

if (isLaunchApp) {
    println "isLaunchApp: ${isLaunchApp}"
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}


apply from: "${rootDir}/config/signingConfigs.gradle"
apply from: "${rootDir}/config/buildConfigs.gradle"
apply from: "${rootDir}/config/optionConfigs.gradle"
apply from: "${rootDir}/config/featureExt.gradle"
apply from: "${rootDir}/config/versionExt.gradle"
apply from: "${rootDir}/config/dependencyExt.gradle"
apply from: "${rootDir}/config/dateConvertor.gradle"

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    resourcePrefix 'comui_'

    defaultConfig {
        versionCode Integer.valueOf(releaseTime())
        versionName "Comui_${releaseTime()}"
    }

    if (isLaunchApp) {
        applicationVariants.all {
            variant ->
                variant.outputs.all {
                    output ->
                        outputFileName = "${defaultConfig.versionName}_${buildType.name}.apk"
                }
        }
    }

    buildTypes {
        debug {
            if (isLaunchApp) {
                shrinkResources feature.isMinifyEnabled
            }

            buildConfigField "boolean", "MOCK_LOCAL", "false"
        }

        release {
            if (isLaunchApp) {
                shrinkResources true
            }

            buildConfigField "boolean", "MOCK_LOCAL", "false"
        }
    }

    flavorDimensions 'library'
    productFlavors {
        if (isLaunchApp) {
            app {
                dimension 'library'
                applicationId 'com.githubyss.mobile.common.ui'
                manifestPlaceholders = [APP_NAME: "通用Ui库"]
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
                srcDirs 'src/main/kotlin'
            }
            res {
                srcDirs 'src/main/res'
                srcDirs 'src/main/res/common'

                srcDirs 'src/main/res/toolbar'
                srcDirs 'src/main/res/separator'
                srcDirs 'src/main/res/banner'
                srcDirs 'src/main/res/dialog'
                srcDirs 'src/main/res/spinner'

                srcDirs 'src/main/res/time_countdown'

                srcDirs 'src/main/res/auto_hide_floating_window'
                srcDirs 'src/main/res/floating_audio_player'
                srcDirs 'src/main/res/floating_icon'

                srcDirs 'src/main/res/recycler_view'
                srcDirs 'src/main/res/slide_to_refresh_scroll_view'
            }
            manifest {
                srcFile 'src/main/AndroidManifest.xml'
            }
            jniLibs {
                srcDirs 'libs'
            }
        }

        if (isLaunchApp) {
            app {
                java {
                    srcDirs 'src/app/java'
                    srcDirs 'src/app/kotlin'
                }
                res {
                    srcDirs 'src/app/res'
                    srcDirs 'src/app/res/common'

                    srcDirs 'src/app/res/homepage'
                    srcDirs 'src/app/res/button'
                    srcDirs 'src/app/res/card'
                    srcDirs 'src/app/res/text'
                    srcDirs 'src/app/res/text_field'
                    srcDirs 'src/app/res/animate'
                    srcDirs 'src/app/res/custom_view'
                    srcDirs 'src/app/res/time_countdown'
                    srcDirs 'src/app/res/floating_window'
                    srcDirs 'src/app/res/recycler_view'
                    srcDirs 'src/app/res/recycler_view/search'
                    srcDirs 'src/app/res/recycler_view/multi'
                    srcDirs 'src/app/res/recycler_view/three_layer'
                    srcDirs 'src/app/res/spinner'
                    srcDirs 'src/app/res/speech_recognition'
                    srcDirs 'src/app/res/widget'
                    srcDirs 'src/app/res/widget_default'
                    srcDirs 'src/app/res/widget_schedule'
                    srcDirs 'src/app/res/widget_player'
                }
                manifest {
                    srcFile 'src/app/AndroidManifest.xml'
                }
            }
        }

        test {
            java {
                srcDirs 'src/test/java'
                srcDirs 'src/test/kotlin'
            }
        }

        all {
            // set -> println "集合 ${set.name} 的文件是 ${set.java.srcDirs}"
        }
    }

    buildFeatures {
        dataBinding feature.isDataBindingEnabled
        compose feature.isComposeEnabled
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':DesignPatternLibrary_Android')
    implementation project(':CommonBaseSdk_Android')
    implementation project(':CommonResSdk_Android')
    implementation project(':CommonKitSdk_Android')

    implementation dependenciesLib.androidx_appcompat
    implementation dependenciesLib.androidx_activity_compose
    implementation dependenciesLib.androidx_fragment_ktx
    implementation dependenciesLib.androidx_localbroadcastmanager
    implementation dependenciesLib.androidx_constraintlayout
    implementation dependenciesLib.androidx_constraintlayout_compose
    implementation dependenciesLib.androidx_recyclerview
    implementation dependenciesLib.androidx_compose_material
    implementation dependenciesLib.androidx_compose_ui_tooling

    implementation dependenciesLib.google_material
    implementation dependenciesLib.google_flexbox

    // implementation dependenciesLib.airbnb_lottie
    // implementation dependenciesLib.airbnb_lottie_compose
    implementation dependenciesLib.sahasbhop_apng_view

    // implementation dependenciesLib.coil
    // implementation dependenciesLib.coil_gif
    implementation dependenciesLib.coil_compose

    if (isLaunchApp) {
        appImplementation project(':CommonNetSdk_Android')
    }
}
