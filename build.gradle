boolean isShellApp = project.getName() == shellApp
boolean isLaunchApp = project.getName() == launchApp
if (isLaunchApp) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version.toInteger()
    buildToolsVersion build_tools_version

    resourcePrefix 'comui_'

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        if (isLaunchApp) {
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        }

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            debuggable isDebuggable.toBoolean()
            minifyEnabled isMinifyEnabled.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "MOCK_LOCAL", "false"
        }

        release {
            debuggable isDebuggable.toBoolean()
            minifyEnabled isMinifyEnabled.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "MOCK_LOCAL", "false"
        }
    }

    if (isLaunchApp) {
        flavorDimensions 'isLib'
        productFlavors {
            lib {
                dimension 'isLib'
            }
            alone {
                dimension 'isLib'
                applicationId 'com.githubyss.mobile.common.ui'
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
                srcDirs 'src/main/kotlin'
            }
            res {
                srcDirs 'src/main/res'
                srcDirs 'src/main/res/common'

                srcDirs 'src/main/res/banner'
                srcDirs 'src/main/res/button'
                srcDirs 'src/main/res/card'
                srcDirs 'src/main/res/check_box'
                srcDirs 'src/main/res/dialog'
                srcDirs 'src/main/res/input'
                srcDirs 'src/main/res/label'
                srcDirs 'src/main/res/launcher'
                srcDirs 'src/main/res/separator'
                srcDirs 'src/main/res/tag'
                srcDirs 'src/main/res/tip'
                srcDirs 'src/main/res/toolbar'
                srcDirs 'src/main/res/time_countdown'

                srcDirs 'src/main/res/auto_hide_floating_window'
                srcDirs 'src/main/res/floating_audio_player'
                srcDirs 'src/main/res/floating_icon'

                srcDirs 'src/main/res/recycler_view'
                srcDirs 'src/main/res/slide_to_refresh_scroll_view'
            }
            manifest {
                srcFile 'src/main/AndroidManifest.xml'
            }
            jniLibs {
                srcDirs 'libs'
            }
        }

        if (isLaunchApp) {
            alone {
                java {
                    srcDirs 'src/alone/java'
                    srcDirs 'src/alone/kotlin'
                }
                res {
                    srcDirs 'src/alone/res'
                    srcDirs 'src/alone/res/common'

                    srcDirs 'src/alone/res/homepage'
                    srcDirs 'src/alone/res/mvvm'
                    srcDirs 'src/alone/res/view_binding'
                    srcDirs 'src/alone/res/view_binding/inline'
                    srcDirs 'src/alone/res/view_binding/reflect'
                    srcDirs 'src/alone/res/animate'
                    srcDirs 'src/alone/res/recycler_view'
                    srcDirs 'src/alone/res/recycler_view/search'
                    srcDirs 'src/alone/res/recycler_view/multi'
                    srcDirs 'src/alone/res/speech_recognition'
                }
                manifest {
                    srcFile 'src/alone/AndroidManifest.xml'
                }
            }
        }

        sourceSets.all {
            set -> println "${set.name} 的文件是 ${set.java.srcDirs}"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/metadata.kotlin_module'
        exclude 'META-INF/metadata.jvm.kotlin_module'
    }

    dataBinding {
        enabled = isDataBindingEnabled.toBoolean()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':CommonLibSdk_Android')
    implementation project(':CommonKitSdk_Android')
    if (isLaunchApp) {
        implementation project(':CommonNetSdk_Android')
    }
}

kapt {
    arguments {
        arg('moduleName', project.getName())
    }
}
